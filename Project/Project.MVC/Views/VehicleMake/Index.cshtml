@using Project.Service.Models
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model PageResult<VehicleMakeDTO>
@{
	var vehicleMakes = Model.Data;
	var query = Model.Query;
}
<div class="row">
	<h1>Vehicle Make</h1>
	<div>
		<button class="btn btn-primary" style="float:right">
			<a asp-action="CreateVehicleMake" style="color:white">
				Add Vehicle Make
			</a>
		</button>
	</div>
</div>

<div class="row">
	@using (Html.BeginForm("Index", "VehicleMake", FormMethod.Get))
	{
		@Html.TextBox("filter")

		<input type="submit" value="Search" />
	}
</div>
<div class="row">
	<table class="arrowes-table table-striped">
		<thead>
			<tr>
				<th>Id</th>
				<th>
					@{
						var sortOrderName = Equals(query.SortOrder, SortOrder.Ascending) ? SortOrder.Descending : SortOrder.Ascending;
					}
					@Html.ActionLink("Name", "Index", new { filter = query.Filter, page = query.Page, pageSize = query.PageSize, sortOrder = sortOrderName, sortBy = SortBy.Name }, new { @class = "text-dark" })
				</th>
				<th justify-content: center>
					@{
						var sortOrderAbrv = Equals(query.SortOrder, SortOrder.Ascending) ? SortOrder.Descending : SortOrder.Ascending;
					}
					@Html.ActionLink("Abrv", "Index", new { filter = query.Filter, page = query.Page, pageSize = query.PageSize, sortOrder = sortOrderAbrv, sortBy = SortBy.Abrv }, new { @class = "text-dark" })
				</th>
				<th></th>
				<th></th>
			</tr>
		</thead>


		<tbody>
			@foreach (var vehicleMake in vehicleMakes)
			{
				<tr>
					<td>@vehicleMake.Id</td>
					<td>@vehicleMake.Name</td>
					<td>
						@vehicleMake.Abrv
					</td>
					<td>
						<a>
							@Html.ActionLink("Edit", "UpdateVehicleMake", new { id=vehicleMake.Id},new {@class="text-dark"})
						</a>
					</td>
					<td>
						<a class="text-dark" asp-controller="VehicleModel" asp-action="CreateVehicleModel" asp-route-id="@vehicleMake.Id">Add Model</a>
					</td>
					<td>
						<a>
							@Html.ActionLink("Delete", "DeleteVehicleMake", new { id=vehicleMake.Id},new {@class="text-dark"})
						</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<div class="row">
	@{
		if (query.Page > 1)
		{
			<div class="col" style="text-align: left">
				<a>
					@Html.ActionLink($"{query.Page - 1}", "Index", new { filter=query.Filter, page = query.Page - 1, pageSize = query.PageSize, sortOrder = query.SortOrder, sortBy = query.SortBy},new {@class="text-dark"})
				</a>
			</div>
		}
	}
	<div class="col" style="text-align: left"  >
		<a>
			@Html.ActionLink($"{query.Page}", "Index", new { filter=query.Filter, page = query.Page, pageSize = query.PageSize, sortOrder = query.SortOrder,sortBy = query.SortBy})
		</a>
	</div>

	@{
	if (vehicleMakes.Count() == query.PageSize)
	{
		<div class="col" style="text-align: left">
			<a>
				@Html.ActionLink($"{query.Page + 1}", "Index", new { filter=query.Filter, page = query.Page + 1, pageSize = query.PageSize, sortOrder = query.SortOrder, sortBy = query.SortBy},new {@class="text-dark"})
			</a>
		</div>
	}

	}
</div>


<script>
	function getSearchValue() { return document.getElementById("searchbox") }
</script>